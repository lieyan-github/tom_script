; ----------------------------------------------------------
; 通达信股票软件相关操作 -- 执行部分
; ----------------------------------------------------------
#IfWinActive ahk_class TdxW_MainFrame_Class
    
    ; 从版块中删除股票
    Capslock & d::
    ^del::
        从版块中删除股票(){
            send !d
            Sleep, 400
            Send, {enter}
        }

    ; 加入到版块
    Capslock & a::
    ^insert::
        加入到版块(){
            send ^z
        }
    
    ; ----------------------------------------------------------
    ; 放大缩小键保持与MT4统一
    ; ----------------------------------------------------------
    NumpadAdd::up
    NumpadSub::down 

    ; ----------------------------------------------------------
    ; 画线相关内容
    ; ----------------------------------------------------------
    ;取得当前画线按钮的坐标, 为画线做准备
    <^<!RButton::存储画直线按钮的坐标()

    ;[1]往右画水平线, 用于没有提供画水平线的股票软件
    <^<!LButton::执行画水平线(100)

    ; ----------------------------------------------------------
    ; 备注相关内容
    ; ----------------------------------------------------------
    ^q::
        send ^q
        sleep 200
        send {home}
        FormatTime, CurrentDateTime,, yyyy-MM-dd HH:mm:ss  ;看起来将是 9/1/2005 3:53 这样
        _Clipboard_tmp = Clipboard
        Clipboard = [%CurrentDateTime%]`n 
        sleep 150
        send ^v
        Sleep 100
        Clipboard = _Clipboard_tmp
    return
    
    ; ----------------------------------------------------------
    ; 盘后补数据和筛选股票
    ; ----------------------------------------------------------    
    ;收盘补数据
    ^#!scrolllock::盘后补数据()

    ;自动筛选股票()
    ^#!printscreen::自动筛选股票()
#IfWinActive


; ==========================================================
; [通达信自动操作脚本 -- 控制鼠标画水平线,弥补通达信无画水平线的不足]
; 作者: 烈焰
; 更新时间: 2011-10-1 22:54

; 使用说明: 
; 画线需要两个动作, 
; 第一步按ctrl+shift+alt+右键记录画线按钮的坐标;
; 第二步在要画水平线的位置按ctrl+alt+左键开始画水平线;
; ==========================================================



; ----------------------------------------------------------
; [控制鼠标画线]
; ----------------------------------------------------------

; 变量定义
; ----------------------------------------------------------
; 鼠标坐标数组, 已经在全局进行定义
  mouse_pos := [{x:0,y:0},{x:0,y:0},{x:0,y:0}]
; 画线按钮坐标
  line_button_x := 0
  line_button_y := 0

; 把新的鼠标坐标压入鼠标坐标队列, x3,y3是最新压入的内容
; ----------------------------------------------------------
mouse_position_push(x, y){
    global
    mouse_pos[1] := mouse_pos[2]
    mouse_pos[2] := mouse_pos[3]
    mouse_pos[3].x := x
    mouse_pos[3].y := y
}

; [调试工具]显示鼠标坐标队列的内容
; ----------------------------------------------------------
mouse_position_show(){
    global
    tmpstr := ""
    for index, value in mouse_pos
        tmpstr .=  mouse_pos[index].x . ": " . mouse_pos[index].y . "`n"
    msgbox % tmpstr 
}

; [调试工具]在屏幕中(相对于窗口对象)回放坐标队列中的内容
; ----------------------------------------------------------
mouse_position_playback(){
    global
    for index, value in mouse_pos {
        mousemove mouse_pos[index].x, mouse_pos[index].y
        tooltip % mouse_pos[index].x . " - " . mouse_pos[index].y
        sleep 500
    }
}

; ----------------------------------------------------------
存储画直线按钮的坐标(){
    global
    MouseGetPos mouse_x, mouse_y
    line_button_x := mouse_x
    line_button_y := mouse_y
    tooltip % "画线按钮坐标已存储`n" . "x : " . line_button_x . "`ny : " . line_button_y
    sleep 2000
    tooltip
}

; ----------------------------------------------------------
点击画直线按钮(){
    global
    click left %line_button_x%, %line_button_y%
}

; ----------------------------------------------------------
开始画线(in_x1, in_y1, in_x_offset, in_y_offset){
    click down left %in_x1%, %in_y1%
    MouseMove, %in_x_offset%, %in_y_offset%, 0, r
    Click up left
}

; ----------------------------------------------------------
执行画水平线(in_x_offset){
    MouseGetPos mouse_x, mouse_y
    点击画直线按钮()
    开始画线(mouse_x, mouse_y, in_x_offset, 0)
}


; ==========================================================
; ----------------------------------------------------------
; [通达信自动操作脚本 -- 盘后补数据和筛选股票]
; 作者: 烈焰
; 更新时间: 2009-7-13 22:54
; ----------------------------------------------------------
; 使用说明: 
; 本脚本主要完成两种任务,盘后补数据和筛选股票,可灵活使用; 
; ----------------------------------------------------------
; 使用前的准备工作:
; 方法一
; 使用此脚本前,请先建立必要的3个自定义板块,且务必使其顺序如下,
; 自选股,条件股,60选,日选,周选  [其中60选,日选,周选为必须自建的板块]
; ----------------------------------------------------------
; 方法二
; 另外也可随意使用, 但必须在后面函数中更改相应板块的坐标,需改动的相关函数为,
; 1. 设置选股范围为周选板块()
; 2. 设置选股范围为日选板块()
; 3. 选股存入周选板块并开始运行()
; 4. 选股存入日选板块并开始运行()
; 5. 选股存入60选板块并开始运行()
; ----------------------------------------------------------
; ==========================================================

;debug test
;*printscreen::
;;  股票软件操作记录("this is a test")
;   自动筛选股票()
;return


; ----------------------------------------------------------
; 第一部分 动筛选股票
; ----------------------------------------------------------
自动筛选股票(){
    从沪深a股中选出强势日线股()
    从强势日线中选出强势周线股()
    从强势日线中选出强势60分钟线股()
    return "[强势日线->强势周线] [强势日线->强势60分钟线] `n 筛选操作完成!`n 完成时间[" . A_YYYY . "-" . A_MM . "-" . A_DD . " " . A_Hour . ":" . A_Min . ":" . A_Sec . ":" . A_MSec . "]"
}

; 1. 从沪深a股中选出强势日线股()
; ----------------------------------------------------------
从沪深a股中选出强势日线股(){
    msgbox, , , 日线选股 [沪深a股->强势日线] 操作准备开始...., 5
    激活主窗口("TdxW_MainFrame_Class")  
    选择菜单综合选股()
    激活选股方案窗口()
    加入选股条件("日")
    ;默认范围已是沪深a股,不用更改
    
    设置选股周期为日线()
    选股存入日选板块并开始运行()
    ;选股进行中.....
    等待运行结束关闭窗口并提示消息("日线选股 [沪深a股->强势日线] 操作完成!")
}

; 2. 从强势日线中选出强势周线股()
; ----------------------------------------------------------
从强势日线中选出强势周线股(){
    msgbox, , , 周线选股 [强势日线->强势周线] 操作准备开始...., 5
    激活主窗口("TdxW_MainFrame_Class")
    选择菜单综合选股()
    激活选股方案窗口()
    加入选股条件("周")
    设置选股范围为日选板块()    

    ;返回选股方案窗口
    激活选股方案窗口()
    设置选股周期为周线()
    选股存入周选板块并开始运行()    
    ;选股进行中.....
    等待运行结束关闭窗口并提示消息("周线选股 [强势日线->强势周线] 操作完成!")
}   

; 3. 从强势日线中选出强势60分钟线股()
; ----------------------------------------------------------
从强势日线中选出强势60分钟线股(){
    msgbox, , , 60分钟线选股 [强势日线->强势60分钟线] 操作准备开始...., 5
    激活主窗口("TdxW_MainFrame_Class")
    选择菜单综合选股()
    激活选股方案窗口()
    加入选股条件("60")
    设置选股范围为日选板块()
        
    ;返回选股方案窗口
    激活选股方案窗口() 
    设置选股周期为60分钟线()
    选股存入60选板块并开始运行()
    ;选股进行中.....
    等待运行结束关闭窗口并提示消息("60分钟线选股 [强势日线->强势60分钟线] 操作完成!")
}

; ----------------------------------------------------------
; 选股动作相关函数
; ----------------------------------------------------------
激活主窗口(_win_ahk_class){
    DetectHiddenWindows on
    WinWait, ahk_class %_win_ahk_class%, 
    IfWinNotActive, ahk_class %_win_ahk_class%, , WinActivate, ahk_class %_win_ahk_class%, 
    WinWaitActive, ahk_class %_win_ahk_class%, 
    DetectHiddenWindows Off
    sleep,500
}
; ----------------------------------------------------------
选择菜单综合选股(){
    ;选择菜单中的功能   
    MouseClick, left,  103,  13
    Sleep, 200
    ;选择选股器
    MouseClick, left,  152,  327
    Sleep, 200
    ;选择综合选股
    MouseClick, left,  274,  411
    Sleep, 200
}
; ----------------------------------------------------------
激活选股方案窗口(){
    WinWait, 选股方案, 
    IfWinNotActive, 选股方案, , WinActivate, 选股方案, 
    WinWaitActive, 选股方案, 
}
; ==========================================================

; ----------------------------------------------------------
; 设置选股条件
; ----------------------------------------------------------
设置选股条件(){
    ;选择用户条件
    MouseClick, left,  240,  37
    Sleep, 200
    ;选择条件选股前面的+号,打开树型分支
    MouseClick, left,  18,  110
    Sleep, 200
    ;选择其他类型前面的+号,打开树型分支
    MouseClick, left,  38,  205
    Sleep, 200
    ;选择寻找多头强势股
    MouseClick, left,  100,  251
    Sleep, 200
}


; 设置条件参数(),在选股条件中设置条件参数
; ----------------------------------------------------------
设置条件参数(_win, _control, _value){
    ;ControlGetText,ctext,Button13,ahk_class #32770
    ControlSetText, %_control%, %_value%, ahk_class %_win%
}

; ----------------------------------------------------------
加入选股条件(_选股周期){
    ;设置选股条件
    设置选股条件()
        
    ;设置条件参数
    if(_选股周期=="周"){
        设置条件参数("#32770", "edit2", "1")
    }
    else if(_选股周期=="日"){
        设置条件参数("#32770", "edit2", "1")
    }
    else if(_选股周期=="60"){
        设置条件参数("#32770", "edit2", "1")
    }
    Sleep, 300
    ;点击加入条件按钮
    MouseClick, left,  329,  106
    Sleep, 300
}


; ----------------------------------------------------------
; 设置选股周期(_x,_y), 此函数设置选股周期的通用模型, 
; 只需设置目标周期的坐标即可区分完成
; ----------------------------------------------------------
设置选股周期(_x,_y){
    ;点击选股周期
    MouseClick, left,  500,  449
    Sleep, 300
    ;指定目标周期
    MouseClick, left,  %_x%,  %_y%
    Sleep, 400
}

设置选股周期为周线(){
    设置选股周期(444,352)
}

设置选股周期为日线(){
    ;默认选股周期就是日线
}

设置选股周期为60分钟线(){
    设置选股周期(444,318)
}


; ----------------------------------------------------------
; 置选股范围(_clickCount, _x, _y), 此函数设置选股范围的通用模型, 
; 需设置目标板块的滑块右移次数和坐标即可
; ----------------------------------------------------------
设置选股范围(_clickCount, _x, _y){
    ;点击改变范围按钮,准备更改选股范围
    MouseClick, left,  470,  338
    Sleep, 200
    ;等待改变范围窗口打开
    WinWait, 改变范围, 
    IfWinNotActive, 改变范围, , WinActivate, 改变范围, 
    WinWaitActive, 改变范围, 
    ;取消上证a股,深证a股复选项
    MouseClick, left,  23,  74
    Sleep, 300
    MouseClick, left,  18,  40
    Sleep, 600
    ;点滑块右侧的向右箭头,让区域向右移动24次
    loop %_clickCount%{
        MouseClick, left,  213,  211
        Sleep, 300
    }
    ;选择目标板块
    MouseClick, left,  %_x%,  %_y%
    Sleep, 300
    ;点确定按钮
    MouseClick, left,  261,  184
    Sleep, 300
}

设置选股范围为周选板块(){
    设置选股范围(24, 150, 160)
}

设置选股范围为日选板块(){
    设置选股范围(24, 150, 143)
}


; ----------------------------------------------------------
; 股入板块并开始运行(_x,_y), 此函数是选股存入*板块并开始运行的通用模型, 
; 需设置存入目标板块的坐标即可区分完成
; ----------------------------------------------------------
选股入板块并开始运行(_x,_y){
    ;点击选股入板块按钮,打开选择板块窗口
    MouseClick, left,  546,  378
    Sleep, 200
    WinWait, 请选择板块, 
    IfWinNotActive, 请选择板块, , WinActivate, 请选择板块, 
    WinWaitActive, 请选择板块, 
    ;选择结果存入板块
    MouseClick, left,  %_x%,  %_y%
    Sleep, 400
    ;点确定按钮
    MouseClick, left,  345,  215
    Sleep, 1000
    ;接下来判断是否出现一个清空确认提示窗口
    IfWinExist TdxW 
    {
        WinWait, TdxW, 
        IfWinNotActive, TdxW, , WinActivate, TdxW, 
        WinWaitActive, TdxW, 
        ;点击确定
        MouseClick, left,  121,  93
        Sleep, 300
    }
    ;开始进行选股
}

选股存入周选板块并开始运行(){
    选股入板块并开始运行(30,106)
}

选股存入日选板块并开始运行(){
    选股入板块并开始运行(30,89)
}

选股存入60选板块并开始运行(){
    选股入板块并开始运行(30,73)
}


; ----------------------------------------------------------
; 待运行结束关闭窗口并提示消息(_msg)
; ----------------------------------------------------------
等待运行结束关闭窗口并提示消息(_msg){
    ;判断Button13 的text 是否为停止选股, 如果为停止选股则说明正在选股进行中
    ;直到Button13的text是否为关闭  这时就可以点击关闭按钮,并提示已经选股结束
    Loop
    { 
        Sleep, 10000
        ControlGetText,ctext,Button13,ahk_class #32770
        if(ctext<>"停止选股")
        {
            break
        }
        else
        {
            continue
        }
    }
    ;选股完成,定位[选股方案]窗口以便定位下面的按钮
    WinWait, ahk_class #32770, 
    IfWinNotActive, ahk_class #32770, , WinActivate, ahk_class #32770, 
    WinWaitActive, ahk_class #32770, 
    Sleep, 500
    
    ;等待选股完成后,点击关闭
    MouseClick, left,  545,  446
    Sleep, 300
    msgbox, , , %_msg%, 5
}


; ----------------------------------------------------------
; 第二部分
; ----------------------------------------------------------
; 盘后补数据
; 
; 使用说明:
; 盘后数据下载,需要先登录通达信,
; 此方法可以自动将任务栏或最小化的通达信激活变为当前窗口
; ----------------------------------------------------------
盘后补数据(){
    中午已补:=0
    盘后已补:=0
    中午已选:=0
    loop{
        中午补日线和5分钟线(中午已补)
        盘后补日线和5分钟线(盘后已补)
        if(A_Hour>=0 && A_Hour<9){
            中午已补=0
            盘后已补=0  
        }
        if(中午已补==1 && A_Hour==12 && 中午已选=0){
            temp:=自动筛选股票()
            中午已选=1
            股票软件操作记录(temp)
        }
        sleep 600000
    }
}
    
中午补日线和5分钟线(byref 已补){
    if(((A_Hour=11 && A_Min>40) || A_Hour=12 ) && 已补=0){
        msgbox, , , 中午补日线和5分钟线准备开始...., 5
        补五分钟数据()
        补日线数据()
        已补=1
        股票软件操作记录("中午补日线和5分钟线完成")
    }
}

盘后补日线和5分钟线(byref 已补){
    if(((A_Hour=15 && A_Min>10) || A_Hour>15) && 已补=0){
        msgbox, , , 盘后补日线和5分钟线准备开始...., 5
        补五分钟数据()
        补日线数据()
        已补=1
        股票软件操作记录("盘后补日线和5分钟线完成")
    }
}
    

; ----------------------------------------------------------
; 后数据下载(_x, _y, _msg), 此函数是补日线和补5分钟线的通用模型, 
; 需设置选择两个不同tab的坐标即可区分完成
; ----------------------------------------------------------
盘后数据下载(_x, _y, _msg){
    msgbox, , , [%_msg%] 操作准备开始...., 5
    DetectHiddenWindows on
    WinWait, ahk_class TdxW_MainFrame_Class, 
    IfWinNotActive, ahk_class TdxW_MainFrame_Class, , WinActivate, ahk_class TdxW_MainFrame_Class, 
    WinWaitActive, ahk_class TdxW_MainFrame_Class, 
    DetectHiddenWindows Off
    sleep,500
    ;点击系统菜单
    MouseClick, left,  36,  14
    Sleep, 100
    ;选择盘后数据下载
    MouseClick, left,  68,  240
    Sleep, 100
    ;等待窗口打开
    WinWait, 盘后数据下载, 
    IfWinNotActive, 盘后数据下载, , WinActivate, 盘后数据下载, 
    WinWaitActive, 盘后数据下载, 
    ;选择tab[日线数据/5分钟线]
    MouseClick, left,  %_x%,  %_y%
    Sleep, 200
    ;选中日线和实时行情数据checkbox
    MouseClick, left,  49,  87
    Sleep, 200
    ;点击开始下载按钮
    MouseClick, left,  342,  320
    Sleep, 10000
    ;下载中.......
    ;判断Button7 的text 是否为开始下载, 如果为开始下载则说明已经下载完成
    ;这时就可以点击关闭按钮,并提示已经下载完5分钟数据
    Loop
    { 
        ControlGetText,ctext,Button7,盘后数据下载
        if(ctext=="开始下载")
        {
            break
        }
        else
        {
            continue
        }
        Sleep, 10000
    }
    ;下载完成点击关闭按钮
    Sleep, 2000
    MouseClick, left,  406,  315
    Sleep, 200
    msgbox, , , [%_msg%] 操作完成!, 5
}

补五分钟数据(){
    盘后数据下载(109, 42, "补5分钟数据")
}

补日线数据(){
    盘后数据下载(50, 42, "补日线数据")
}


; ----------------------------------------------------------
; 股票软件操作记录(_msg), 此函数是记录操作日志的通用模型,   
; ----------------------------------------------------------
股票软件操作记录(_msg){
    FileAppend,
(
[%A_YYYY%-%A_MM%-%A_DD% %A_Hour%:%A_Min%:%A_Sec%:%A_MSec%]
%_msg%
`n
), %A_Desktop%\%A_YYYY%-%A_MM%-%A_DD%股票软件自动操作日志.txt
}

